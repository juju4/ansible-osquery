---

# tasks file for osquery (Debian, Ubuntu specific)

- name: Refresh apt cache
  ansible.builtin.apt:
    update_cache: yes
    cache_valid_time: 3600

- name: Ensure dependencies are present
  ansible.builtin.package:
    name:
      - dirmngr
      - apt-transport-https
    state: present
  register: pkg_result
  until: pkg_result is success

- name: Ensure /etc/apt/keyrings directory exists
  ansible.builtin.file:
    name: /etc/apt/keyrings
    state: directory
    mode: '0755'

- name: Setup osquery APT key
  ansible.builtin.get_url:
    url: https://pkg.osquery.io/deb/pubkey.gpg
    dest: /etc/apt/keyrings/osquery.asc
    mode: '0644'
  register: dl_result
  until: dl_result is success
  when: proxy_env is not defined or not proxy_env | string

- name: Proxy
  when: proxy_env is defined and proxy_env | string
  block:
    # workaround for apt_key not supporting proxy (ansible#31691)
    - name: Download osquery Apt signing key  # noqa command-instead-of-module
      ansible.builtin.command: curl -sL -o /etc/apt/keyrings/osquery.asc https://pkg.osquery.io/deb/pubkey.gpg
      args:
        creates: /etc/apt/keyrings/osquery.asc
      environment: "{{ proxy_env | default(omit) }}"

- name: Configure osquery APT repository
  become: yes
  ansible.builtin.apt_repository:
    repo: "{{ _osquery_repository }}"
    state: present
  tags:
    - osquery
  register: pkg_result
  until: pkg_result is success
  notify:
    - Refresh apt cache

- name: Import apparmor
  ansible.builtin.import_tasks: apparmor.yml
  when:
    - not is_container|bool
    - ansible_virtualization_type != "lxc"
