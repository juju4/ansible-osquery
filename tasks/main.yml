---
# tasks file for osquery

- name: Include distribution specific variables
  ansible.builtin.include_vars: "{{ ansible_os_family }}.yml"
  tags:
    - osquery
- name: Include version-specific variables for RedHat
  ansible.builtin.include_vars: "RedHat-{{ ansible_distribution_major_version }}.yml"
  when: ansible_os_family == "RedHat" and ansible_distribution_major_version == '8'
  tags:
    - osquery

- name: Import CentOS
  ansible.builtin.import_tasks: CentOS.yml
  when: ansible_os_family == "RedHat"
  tags:
    - osquery

- name: Import debian
  ansible.builtin.import_tasks: Debian.yml
  when: ansible_os_family == "Debian"
  tags:
    - osquery

- name: RedHat or Debian
  when: ansible_os_family == "RedHat" or ansible_distribution == "Ubuntu" or ansible_distribution == "Debian"
  block:
    - name: Install osquery
      ansible.builtin.package:
        name: "{{ item }}"
        state: present
      with_items: "{{ osquery_packages }}"
      tags:
        - osquery
      register: pkg_result
      until: pkg_result is success

    - name: Install osquery debug packages
      ansible.builtin.package:
        name: "{{ item }}"
        state: present
      with_items: "{{ osquery_debug_packages }}"
      when: osquery_debug_packages_install | bool
      tags:
        - osquery
      register: pkg_result
      until: pkg_result is success

    - name: Import systemd
      ansible.builtin.import_tasks: systemd.yml
      when: osquery_systemd_restriction_enable | bool

    - name: Import configure
      ansible.builtin.import_tasks: configure.yml
      tags:
        - osquery
        - config

    - name: Enable service
      ansible.builtin.service:
        name: "osqueryd"
        enabled: "{{ osquery_service_enable | bool }}"
      tags:
        - osquery
        - service
    - name: Start service
      ansible.builtin.service:
        name: osqueryd
        state: started
      tags:
        - osquery
        - service
      when: >
            osquery_service_enable | bool and
            not (ansible_virtualization_type is defined and
                  (ansible_virtualization_type == "containerd" or ansible_virtualization_type == "docker")
                )
    - name: Service
      when: >
            osquery_service_enable | bool and
            (ansible_virtualization_type is defined and
                  (ansible_virtualization_type == "containerd" or ansible_virtualization_type == "docker")
                )
      block:
        - name: Docker | Check if osqueryd process
          ansible.builtin.command: pgrep -u root osqueryd
          changed_when: false
          ignore_errors: true
          register: pgrep
        - name: Docker | Start service
          ansible.builtin.shell: nohup /usr/bin/osqueryd --flagfile /etc/osquery/osquery.flags --config_path /etc/osquery/osquery.conf &
          tags:
            - osquery
            - service
          when: pgrep.rc != 0
    - name: Import symlink-loop
      ansible.builtin.import_tasks: symlink-loop.yml

    - name: Import reporting
      ansible.builtin.import_tasks: reporting.yml
      when: osquery_reporting

- name: Flush handlers
  ansible.builtin.meta: flush_handlers

- name: Testing
  when: ansible_os_family == "RedHat" or ansible_distribution == "Ubuntu" or ansible_distribution == "Debian"
  block:
    - name: Import testing
      ansible.builtin.import_tasks: testing.yml
      when: osquery_testing | bool

    - name: Import profiling
      ansible.builtin.import_tasks: profiling.yml
      when: osquery_profiling | bool

    - name: Pause a bit to have few queries results
      ansible.builtin.pause:
        seconds: 80
      when: osquery_testing_pause or osquery_testing | bool
