---

- name: FIM
  block:
    - name: ensure directory exists - before osquery start for inotify
      ansible.builtin.file:
        dest: "{{ item }}"
        state: directory
        mode: '0755'
      with_items:
        - /var/tmp/fim-testing-a
        - /var/tmp/fim-testing-b
      notify:
        - restart osquery
    - name: Flush handlers
      ansible.builtin.meta: flush_handlers
  when: osquery_testing_fimfiles or osquery_testing_fim_load

- name: pause a bit
  ansible.builtin.pause:
    seconds: 10

- name: Systemd
  block:
    - name: systemd | check service status
      ansible.builtin.command: "systemctl status osqueryd -l"
      changed_when: false
      register: systemctl
      args:
        warn: false
    - name: Debug | systemctl output
      ansible.builtin.debug: var=systemctl.stdout_lines
  when: >
    ansible_service_mgr == "systemd" and
    not (ansible_virtualization_type is defined and (
      ansible_virtualization_type == "docker" or ansible_virtualization_type == "containerd"
      )
    )
- name: Service
  block:
    - name: service | check service status
      ansible.builtin.command: "service osqueryd status"
      args:
        warn: false
      changed_when: false
      register: service
    - name: Debug | service output
      ansible.builtin.debug: var=service.stdout_lines
  when: ansible_service_mgr == "service"

- name: Fim/Load
  block:
    - name: ensure directory exists
      ansible.builtin.file:
        dest: "{{ item }}"
        state: directory
        mode: '0755'
      with_items:
        - /tmp/too_many_events
        - /tmp/too_many_events/a
        - /tmp/too_many_events/a/b
        - /tmp/too_many_events2/test
        - /tmp/too_many_events2/a
        - /tmp/too_many_events2/a/b
        - /tmp/too_many_events3/a
        - /tmp/too_many_events3/a/b
        - /tmp/excluded6-testing
        - /var/tmp/fim-testing-a
        - /var/tmp/fim-testing-a/.b
        - /var/tmp/fim-testing-b
        - /var/tmp/fim-testing-b/.c
        - /var/tmp/fim-testing-b/.c/d
        - /fim-testing-a/fim-testing-b/fim-testing-c
        - /fim-testing-dir
  when: osquery_testing_fimfiles or osquery_testing_fim_load

- name: FIM
  block:
    - name: create files normally excluded
      ansible.builtin.file:
        name: "{{ item }}"
        state: touch
        mode: '0644'
      with_items:
        - /tmp/too_many_events2/test/testing-aa
        - /tmp/too_many_events/fim-testing1
        - /tmp/too_many_events/a/fim-testing2
        - /tmp/too_many_events/a/b/fim-testing3
        - /tmp/too_many_events2/fim-testing1
        - /tmp/too_many_events2/a/fim-testing2
        - /tmp/too_many_events2/a/b/fim-testing3
        - /tmp/too_many_events3/fim-testing1
        - /tmp/too_many_events3/a/fim-testing2
        - /tmp/too_many_events3/a/b/fim-testing3
        # - /tmp/excluded1-abcdef
        # - /tmp/abcdef-excluded2
        # - /tmp/excluded3-abcdef-testing
        # - /tmp/excluded4-abcdef-testing-ghijkl-testing-mnopqr
        # - /tmp/excluded5-exact-match
        # - /tmp/excluded6-abcdef
        # - /tmp/excluded6-testing/excluded-abcdef
        - /var/tmp/fim-testing-a/fim-testing1
        - /var/tmp/fim-testing-a/.fim-testing2
        - /var/tmp/fim-testing-a/.b/fim-testing3
        - /var/tmp/fim-testing-b/.fim-testing4
        - /var/tmp/fim-testing-b/.c/fim-testing5
        - /var/tmp/fim-testing-b/.c/d/fim-testing6
        - /fim-testing0
        - /fim-testing-a/fim-testing-b/fim-testing10
        - /fim-testing-a/fim-testing-b/fim-testing-c/fim-testing11
    - name: test files
      ansible.builtin.file:
        name: "{{ item }}"
        state: touch
        mode: '0644'
      with_items: "{{ osquery_testing_fim_files }}"
  when: osquery_testing_fimfiles

- name: load
  block:
    - name: fallocate big file
      ansible.builtin.command: "fallocate {{ osquery_fallocate_args | default('') }} -l {{ osquery_testing_fim_load_bigger }} /etc/testing-big-file"
      args:
        creates: /etc/testing-big-file
    - name: creation of many small files in excluded directory
      ansible.builtin.command: "split -b {{ osquery_testing_fim_load_smaller_ex }} /etc/testing-big-file testing-"
      args:
        chdir: /tmp/too_many_events
        creates: /tmp/too_many_events/testing-aa
    - name: clean up
      ansible.builtin.shell: find /tmp/too_many_events/ -name 'testing-*' -exec rm {} \;
      failed_when: false
      when: osquery_testing_cleanup
    - name: creation of many small files
      ansible.builtin.command: "split -b {{ osquery_testing_fim_load_smaller }} /etc/testing-big-file testing-"
      args:
        chdir: /etc
        creates: /etc/testing-aa
    - name: clean up
      ansible.builtin.shell: find /etc/ -name 'testing-*' -exec rm {} \;
      failed_when: false
      when: osquery_testing_cleanup
    # more diverse load? openssl speed, stress...
    - name: retrieve log results
      ansible.builtin.command: "{{ item }}"
      with_items:
        - head -20 /var/log/osquery/osqueryd.results.log
        - tail -20 /var/log/osquery/osqueryd.results.log
      ignore_errors: true
      changed_when: false
      register: log
  when: osquery_testing_fim_load

- name: Get eicar file to check yara rules
  ansible.builtin.get_url:
    url: http://www.eicar.org/download/eicar.com
    dest: /root/test-fim-yara-eicar.com
    mode: '0644'
  when: osquery_testing_yara|bool
